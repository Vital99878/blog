[{"W:\\blog\\src\\index.js":"1","W:\\blog\\src\\redux\\reducer.js":"2","W:\\blog\\src\\components\\App\\index.js":"3","W:\\blog\\src\\components\\App\\App.js":"4","W:\\blog\\src\\components\\PostList\\PostList.js":"5","W:\\blog\\src\\components\\EditProfile\\EditProfile.js":"6","W:\\blog\\src\\components\\Header\\index.js":"7","W:\\blog\\src\\components\\SignUp\\index.js":"8","W:\\blog\\src\\components\\SignIn\\index.js":"9","W:\\blog\\src\\components\\CreateArticle\\index.js":"10","W:\\blog\\src\\components\\Article\\index.js":"11","W:\\blog\\src\\redux\\actions.js":"12","W:\\blog\\src\\components\\SignUp\\SignUp.js":"13","W:\\blog\\src\\components\\CreateArticle\\CreateArticle.js":"14","W:\\blog\\src\\components\\SignIn\\SignIn.js":"15","W:\\blog\\src\\components\\Header\\Header.js":"16","W:\\blog\\src\\components\\Article\\Article.js":"17","W:\\blog\\src\\components\\Post\\index.js":"18","W:\\blog\\src\\api\\blog_api.js":"19","W:\\blog\\src\\api\\auth_api.js":"20","W:\\blog\\src\\components\\Post\\Post.js":"21","W:\\blog\\src\\components\\Auth_hoc\\Auth_hoc.js":"22","W:\\blog\\src\\components\\Writer\\index.js":"23","W:\\blog\\src\\components\\User\\index.js":"24","W:\\blog\\src\\components\\User\\User.js":"25","W:\\blog\\src\\components\\Writer\\Writer.js":"26"},{"size":925,"mtime":1614585316291,"results":"27","hashOfConfig":"28"},{"size":2357,"mtime":1615446857526,"results":"29","hashOfConfig":"28"},{"size":49,"mtime":1614580139656,"results":"30","hashOfConfig":"28"},{"size":1325,"mtime":1615552134434,"results":"31","hashOfConfig":"28"},{"size":2012,"mtime":1615536083990,"results":"32","hashOfConfig":"28"},{"size":3763,"mtime":1615472486217,"results":"33","hashOfConfig":"28"},{"size":58,"mtime":1614580139662,"results":"34","hashOfConfig":"28"},{"size":58,"mtime":1614755930935,"results":"35","hashOfConfig":"28"},{"size":54,"mtime":1614594454389,"results":"36","hashOfConfig":"28"},{"size":79,"mtime":1615196951393,"results":"37","hashOfConfig":"28"},{"size":55,"mtime":1614868717524,"results":"38","hashOfConfig":"28"},{"size":3180,"mtime":1615543395301,"results":"39","hashOfConfig":"28"},{"size":5418,"mtime":1615467517522,"results":"40","hashOfConfig":"28"},{"size":4470,"mtime":1615543604829,"results":"41","hashOfConfig":"28"},{"size":3086,"mtime":1615477883998,"results":"42","hashOfConfig":"28"},{"size":759,"mtime":1615012792944,"results":"43","hashOfConfig":"28"},{"size":3432,"mtime":1615552319617,"results":"44","hashOfConfig":"28"},{"size":52,"mtime":1614583597470,"results":"45","hashOfConfig":"28"},{"size":3722,"mtime":1615550977980,"results":"46","hashOfConfig":"28"},{"size":2452,"mtime":1615468221815,"results":"47","hashOfConfig":"28"},{"size":2203,"mtime":1615552294421,"results":"48","hashOfConfig":"28"},{"size":1457,"mtime":1615436498632,"results":"49","hashOfConfig":"28"},{"size":58,"mtime":1614697958594,"results":"50","hashOfConfig":"28"},{"size":52,"mtime":1614757765007,"results":"51","hashOfConfig":"28"},{"size":648,"mtime":1615442703413,"results":"52","hashOfConfig":"28"},{"size":953,"mtime":1614915646135,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"utkxfk",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"56"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"56"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"56"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"W:\\blog\\src\\index.js",[],["110","111","112","113","114"],"W:\\blog\\src\\redux\\reducer.js",[],"W:\\blog\\src\\components\\App\\index.js",[],"W:\\blog\\src\\components\\App\\App.js",["115","116"],"W:\\blog\\src\\components\\PostList\\PostList.js",[],"W:\\blog\\src\\components\\EditProfile\\EditProfile.js",[],"W:\\blog\\src\\components\\Header\\index.js",[],"W:\\blog\\src\\components\\SignUp\\index.js",[],"W:\\blog\\src\\components\\SignIn\\index.js",[],"W:\\blog\\src\\components\\CreateArticle\\index.js",[],"W:\\blog\\src\\components\\Article\\index.js",[],"W:\\blog\\src\\redux\\actions.js",["117"],"import articles_service from '../api/blog_api';\r\nimport auth_api         from '../api/auth_api';\r\n\r\n// async actions auth\r\nexport function signIn( mail, password ) {\r\n  return async ( dispatch ) => {\r\n    const user = await auth_api.get_user( mail, password );\r\n    if ( typeof user !== 'string' ) {\r\n      dispatch( { type: 'SIGN_IN', user, message: '' } );\r\n    }\r\n    if ( typeof user === 'string' ) {\r\n      dispatch( { type: 'NO_EMAIL_ORE_PASSWORD', message: 'email ore password wrong' } );\r\n    }\r\n  };\r\n};\r\n\r\nexport function signUp( newUser ) {\r\n  return async ( dispatch ) => {\r\n    const user = await auth_api.create_user( newUser );\r\n    if ( user.user) {\r\n      dispatch( { type: 'SIGN_UP', user: user.user} );\r\n    }\r\n    if ( user.errors) {\r\n      const {email: emailValid, username: usernameValid} = user.errors;\r\n      dispatch( { type: 'SIGN_UP_ERRORS', emailValid, usernameValid  } );\r\n    }\r\n  };\r\n};\r\n\r\nexport function updateUser( newUser, token ) {\r\n  return async ( dispatch ) => {\r\n    const user = await auth_api.update_user( newUser, token );\r\n    console.log(user)\r\n    if ( user.user) {\r\n      dispatch( { type: 'SIGN_UP', user: user.user} );\r\n    }\r\n    if ( user.errors) {\r\n      const {email: emailValid, username: usernameValid} = user.errors;\r\n      dispatch( { type: 'SIGN_UP_ERRORS', emailValid, usernameValid  } );\r\n    }\r\n  };\r\n};\r\n\r\nexport function getArticles( offset, token = '' ) {\r\n  return async ( dispatch ) => {\r\n    const { articles, articlesCount } = await articles_service.get_articles( offset, token );\r\n    dispatch( { type: 'GET_ARTICLES', articles, articlesCount } );\r\n  };\r\n}\r\n\r\nexport function postArticle(  article, token) {\r\n    return async ( dispatch ) => {\r\n    const newArticle = await articles_service.post_article( article, token );\r\n    dispatch( { type: 'ONE_ARTICLE', article: newArticle} );\r\n  };\r\n}\r\n\r\nexport function deleteArticle(  slug, token) {\r\n\r\n  return async ( dispatch ) => {\r\n    const newArticle = await articles_service.delete_article( slug, token );\r\n    dispatch( { type: 'ONE_ARTICLE', article: newArticle} );\r\n  };\r\n}\r\n\r\nexport const isLogOut = () => (\r\n  {\r\n    type: 'LOGOUT',\r\n  });\r\n\r\n// async actions Articles\r\n\r\nexport function getOneArticle( slug, user ) {\r\n  return async ( dispatch ) => {\r\n    const article = await articles_service.get_one_article( slug, user );\r\n    dispatch( { type: 'ONE_ARTICLE', article } );\r\n  };\r\n}\r\n\r\nexport function addToFavorite( slug, token ) {\r\n  return async ( dispatch ) => {\r\n    const article = await articles_service.add_to_favorite( slug, token );\r\n    dispatch( { type: 'LIKE', article } );\r\n  };\r\n}\r\n\r\nexport function removeFromFavorite( slug, token ) {\r\n  return async ( dispatch ) => {\r\n    const article = await articles_service.remove_from_favorite( slug, token );\r\n    dispatch( { type: 'DISLIKE', article } );\r\n  };\r\n}\r\n\r\n// export function removeFromFavorite( slug, token ) {\r\n//   return async ( dispatch ) => {\r\n//     await articles_service.remove_from_favorite( slug, token );\r\n//     dispatch( { type: 'DISLIKE' } );\r\n//   };\r\n// }\r\n\r\nexport const set_offset = ( page, offset ) => (\r\n  {\r\n    type: 'OFFSET',\r\n    offset, page,\r\n  });\r\n\r\n\r\n","W:\\blog\\src\\components\\SignUp\\SignUp.js",[],"W:\\blog\\src\\components\\CreateArticle\\CreateArticle.js",["118"],"import React, { useRef, useState, useEffect } from 'react';\r\nimport PropTypes                              from 'prop-types';\r\nimport { connect }                            from 'react-redux';\r\nimport { useForm }                            from 'react-hook-form';\r\nimport * as actions                           from '../../redux/actions';\r\nimport classes                                from './CreateArticle.module.scss';\r\n\r\n\r\nconst {\r\n  article__title,\r\n  article,\r\n  article__forms,\r\n  article__label,\r\n  article__button,\r\n  article__input,\r\n  article__body,\r\n  article__tags,\r\n  article__tag,\r\n  article__add_tag,\r\n  article__delete_tag,\r\n} = classes;\r\n\r\nconst CreateArticle = ( { postArticle, token } ) => {\r\n  const { register, handleSubmit, errors } = useForm();\r\n\r\n  const [ tagsList, setTagsList ] = useState( [] );\r\n\r\n  const [ tagsValues, setTagsValue ] = useState( {} );\r\n  const get_label = ( event ) => {\r\n    const { name, value } = event.target;\r\n    setTagsValue( { ...tagsValues, ...{ [ name ]: value } } );\r\n  };\r\n\r\n  function deleteTag( evt ) {\r\n    const targetInd = Number( evt.target.dataset.ind );\r\n    setTagsValue( ( oldTags ) => {\r\n      const newTags = { ...oldTags };\r\n      delete newTags [ targetInd ];\r\n      return newTags;\r\n    } );\r\n    setTagsList( list => list.filter( item => item.id !== targetInd ) );\r\n  }\r\n\r\n  const tags = tagsList.map( ( item ) => (\r\n    <div className={article__tag}>\r\n      <input className={article__input} type=\"text\"  onChange={get_label} name={item.id} placeholder=\"tag\" />\r\n      <button className={article__delete_tag} onClick={deleteTag} data-ind={item.id} type=\"button\">\r\n        Delete\r\n      </button>\r\n    </div>\r\n  ) );\r\n\r\n  const onSubmit = ( data ) => {\r\n    const tagList = [];\r\n    for( const key in tagsValues) {\r\n      tagList.push(tagsValues[key])\r\n    }\r\n    console.log(tagList)\r\n    postArticle( { ...data, tagList }, token);\r\n  };\r\n\r\n  return (\r\n    <div className={article}>\r\n      <h6 className={article__title}>Create new article</h6>\r\n      <div className={article__forms}>\r\n        <label className={article__label}>\r\n          Title\r\n          <input\r\n            ref={register( { required: true } )}\r\n            name=\"title\"\r\n            className={article__input}\r\n            type=\"text\"\r\n            placeholder=\"Title\"\r\n          />\r\n          {errors.title && errors.title.type === 'required' && (\r\n            <span className={classes.warning}>Title is required</span>\r\n          )}\r\n        </label>\r\n        <label className={article__label}>\r\n          Short description\r\n          <input\r\n            ref={register( { required: true } )}\r\n            name=\"description\"\r\n            className={article__input}\r\n            type=\"text\"\r\n            required\r\n            placeholder=\"Short description\"\r\n          />\r\n          {errors.description && errors.description.type === 'required' && (\r\n            <span className={classes.warning}>Description is required</span>\r\n          )}\r\n        </label>\r\n        <label className={article__label}>\r\n          Text\r\n          <textarea\r\n            ref={register( { required: true, minLength: 30 } )}\r\n            name=\"body\"\r\n            className={article__body}\r\n            cols={30}\r\n            required\r\n            placeholder=\"Text\"\r\n          />\r\n          {errors.body && errors.body.type === 'required' && (\r\n            <span className={classes.warning}>Body of article is required</span>\r\n          )}\r\n          {errors.body && errors.body.type === 'minLength' && (\r\n            <span className={classes.warning}>minimum characters of article is 30</span>\r\n          )}\r\n        </label>\r\n        <form className={article__tags}>\r\n          Tags\r\n          {tags}\r\n          <button\r\n            className={article__add_tag}\r\n            onClick={() => setTagsList(\r\n              ( list ) => [ ...list, { id: Math.round( Math.random() * 100 ) } ] )}\r\n            type=\"button\">\r\n            Add tag\r\n          </button>\r\n        </form>\r\n      </div>\r\n      <button className={article__button} onClick={handleSubmit( onSubmit )} type=\"submit\">\r\n        Send\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nCreateArticle.defaultProp = {};\r\nCreateArticle.propTypes = {\r\n  postArticle: PropTypes.func.isRequired,\r\n  token: PropTypes.string.isRequired,\r\n};\r\n\r\nconst mapStateToProps = ( state ) => (\r\n  {\r\n    token: state.user.token,\r\n  });\r\n\r\nexport default connect( mapStateToProps, actions )( CreateArticle );\r\n","W:\\blog\\src\\components\\SignIn\\SignIn.js",[],"W:\\blog\\src\\components\\Header\\Header.js",[],"W:\\blog\\src\\components\\Article\\Article.js",["119"],"W:\\blog\\src\\components\\Post\\index.js",[],"W:\\blog\\src\\api\\blog_api.js",["120"],"W:\\blog\\src\\api\\auth_api.js",["121"],"const base = 'https://conduit.productionready.io/api';\n\n\nclass Auth_api {\n\n  async create_user( { username, email, password }) {\n    const myHeaders = new Headers();\n    myHeaders.append( 'Content-Type', 'application/json' );\n    const raw = JSON.stringify( {\n                                  user: {\n                                    username,\n                                    email,\n                                    password,\n                                  },\n                                } );\n    const requestOptions = {\n      method: 'POST',\n      headers: myHeaders,\n      body: raw,\n      redirect: 'follow',\n    };\n    const body = await fetch(`${base}/users`, requestOptions);\n    const user = await body.json()\n    console.log(user)\n    return user;\n  }\n\n  async update_user( { username, email, password, avatar }, token) {\n    const myHeaders = new Headers();\n    myHeaders.append( 'Authorization', `Token ${token}` );\n    myHeaders.append( 'Content-Type', 'application/json' );\n    if (!password ) {\n      password = null\n    }\n    const raw = JSON.stringify( {\n                                  user: {\n                                    email,\n                                    username,\n                                    password,\n                                    image:avatar\n                                  },\n                                } );\n    const requestOptions = {\n      method: 'PUT',\n      headers: myHeaders,\n      body: raw,\n      redirect: 'follow',\n    };\n    const body = await fetch(`${base}/user`, requestOptions);\n    const user = await body.json()\n    return user;\n  }\n\n  async get_user(email, password) {\n    const myHeaders = new Headers();\n    myHeaders.append( 'Content-Type', 'application/json' );\n    const raw = JSON.stringify( {\n                                  user: {\n                                    email,\n                                    password,\n                                  },\n                                } );\n    const requestOptions = {\n      method: 'POST',\n      headers: myHeaders,\n      body: raw,\n      redirect: 'follow',\n    };\n    const body = await fetch(`${base}/users/login`, requestOptions);\n    if ( body.status === 422) {\n      return 'email ore password wrong'\n    }\n    const user = await body.json()\n    return user.user;\n  }\n\n  // async create_article() {\n  // }\n  //\n  // async edit_article() {\n  // }\n}\n\nexport default new Auth_api();","W:\\blog\\src\\components\\Post\\Post.js",[],"W:\\blog\\src\\components\\Auth_hoc\\Auth_hoc.js",[],"W:\\blog\\src\\components\\Writer\\index.js",[],"W:\\blog\\src\\components\\User\\index.js",[],"W:\\blog\\src\\components\\User\\User.js",[],"W:\\blog\\src\\components\\Writer\\Writer.js",[],{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","severity":1,"message":"133","line":24,"column":16,"nodeType":"134","messageId":"135","endLine":24,"endColumn":27},{"ruleId":"132","severity":1,"message":"133","line":26,"column":16,"nodeType":"134","messageId":"135","endLine":26,"endColumn":27},{"ruleId":"132","severity":1,"message":"133","line":33,"column":5,"nodeType":"134","messageId":"135","endLine":33,"endColumn":16},{"ruleId":"132","severity":1,"message":"133","line":58,"column":5,"nodeType":"134","messageId":"135","endLine":58,"endColumn":16},{"ruleId":"132","severity":1,"message":"133","line":21,"column":3,"nodeType":"134","messageId":"135","endLine":21,"endColumn":14},{"ruleId":"132","severity":1,"message":"133","line":48,"column":5,"nodeType":"134","messageId":"135","endLine":48,"endColumn":16},{"ruleId":"132","severity":1,"message":"133","line":24,"column":5,"nodeType":"134","messageId":"135","endLine":24,"endColumn":16},"lines-around-directive",["136"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"no-console","Unexpected console statement.","MemberExpression","unexpected","padding-line-between-statements"]