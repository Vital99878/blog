[{"W:\\blog\\src\\index.js":"1","W:\\blog\\src\\redux\\reducer.js":"2","W:\\blog\\src\\components\\App\\index.js":"3","W:\\blog\\src\\components\\App\\App.js":"4","W:\\blog\\src\\components\\PostList\\PostList.js":"5","W:\\blog\\src\\components\\EditProfile\\EditProfile.js":"6","W:\\blog\\src\\components\\Header\\index.js":"7","W:\\blog\\src\\components\\SignUp\\index.js":"8","W:\\blog\\src\\components\\SignIn\\index.js":"9","W:\\blog\\src\\components\\CreateArticle\\index.js":"10","W:\\blog\\src\\components\\Article\\index.js":"11","W:\\blog\\src\\redux\\actions.js":"12","W:\\blog\\src\\components\\SignUp\\SignUp.js":"13","W:\\blog\\src\\components\\CreateArticle\\CreateArticle.js":"14","W:\\blog\\src\\components\\SignIn\\SignIn.js":"15","W:\\blog\\src\\components\\Header\\Header.js":"16","W:\\blog\\src\\components\\Article\\Article.js":"17","W:\\blog\\src\\components\\Post\\index.js":"18","W:\\blog\\src\\api\\blog_api.js":"19","W:\\blog\\src\\api\\auth_api.js":"20","W:\\blog\\src\\components\\Post\\Post.js":"21","W:\\blog\\src\\components\\Auth_hoc\\Auth_hoc.js":"22","W:\\blog\\src\\components\\Writer\\index.js":"23","W:\\blog\\src\\components\\User\\index.js":"24","W:\\blog\\src\\components\\User\\User.js":"25","W:\\blog\\src\\components\\Writer\\Writer.js":"26"},{"size":925,"mtime":1614585316291,"results":"27","hashOfConfig":"28"},{"size":2357,"mtime":1615446857526,"results":"29","hashOfConfig":"28"},{"size":49,"mtime":1614580139656,"results":"30","hashOfConfig":"28"},{"size":935,"mtime":1615448051538,"results":"31","hashOfConfig":"28"},{"size":2012,"mtime":1615536083990,"results":"32","hashOfConfig":"28"},{"size":3763,"mtime":1615472486217,"results":"33","hashOfConfig":"28"},{"size":58,"mtime":1614580139662,"results":"34","hashOfConfig":"28"},{"size":58,"mtime":1614755930935,"results":"35","hashOfConfig":"28"},{"size":54,"mtime":1614594454389,"results":"36","hashOfConfig":"28"},{"size":79,"mtime":1615196951393,"results":"37","hashOfConfig":"28"},{"size":55,"mtime":1614868717524,"results":"38","hashOfConfig":"28"},{"size":3183,"mtime":1615535849263,"results":"39","hashOfConfig":"28"},{"size":5418,"mtime":1615467517522,"results":"40","hashOfConfig":"28"},{"size":3907,"mtime":1615529156889,"results":"41","hashOfConfig":"28"},{"size":3086,"mtime":1615477883998,"results":"42","hashOfConfig":"28"},{"size":759,"mtime":1615012792944,"results":"43","hashOfConfig":"28"},{"size":3203,"mtime":1615536334469,"results":"44","hashOfConfig":"28"},{"size":52,"mtime":1614583597470,"results":"45","hashOfConfig":"28"},{"size":3756,"mtime":1615535621768,"results":"46","hashOfConfig":"28"},{"size":2452,"mtime":1615468221815,"results":"47","hashOfConfig":"28"},{"size":2286,"mtime":1615536142680,"results":"48","hashOfConfig":"28"},{"size":1457,"mtime":1615436498632,"results":"49","hashOfConfig":"28"},{"size":58,"mtime":1614697958594,"results":"50","hashOfConfig":"28"},{"size":52,"mtime":1614757765007,"results":"51","hashOfConfig":"28"},{"size":648,"mtime":1615442703413,"results":"52","hashOfConfig":"28"},{"size":953,"mtime":1614915646135,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"utkxfk",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"56"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"56"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"W:\\blog\\src\\index.js",[],["109","110","111","112","113"],"W:\\blog\\src\\redux\\reducer.js",[],"W:\\blog\\src\\components\\App\\index.js",[],"W:\\blog\\src\\components\\App\\App.js",[],"W:\\blog\\src\\components\\PostList\\PostList.js",[],"W:\\blog\\src\\components\\EditProfile\\EditProfile.js",[],"W:\\blog\\src\\components\\Header\\index.js",[],"W:\\blog\\src\\components\\SignUp\\index.js",[],"W:\\blog\\src\\components\\SignIn\\index.js",[],"W:\\blog\\src\\components\\CreateArticle\\index.js",[],"W:\\blog\\src\\components\\Article\\index.js",[],"W:\\blog\\src\\redux\\actions.js",["114"],"W:\\blog\\src\\components\\SignUp\\SignUp.js",[],"W:\\blog\\src\\components\\CreateArticle\\CreateArticle.js",["115"],"import React, { useRef, useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { useForm } from 'react-hook-form';\r\nimport * as actions from '../../redux/actions';\r\nimport classes from './CreateArticle.module.scss';\r\n\r\nconst {\r\n  article__title,\r\n  article,\r\n  article__forms,\r\n  article__label,\r\n  article__button,\r\n  article__input,\r\n  article__body,\r\n  article__tags,\r\n  article__tag,\r\n  article__add_tag,\r\n  article__delete_tag,\r\n} = classes;\r\n\r\nconst CreateArticle = ({ postArticle, token }) => {\r\n  console.log(token)\r\n  const { register, handleSubmit, errors } = useForm();\r\n\r\n  const [tagsList, setTagsList] = useState([]);\r\n\r\n  function deleteTag(evt) {\r\n    const targetInd = Number(evt.target.dataset.ind);\r\n    setTagsList(list => list.filter( item => item.id !== targetInd ) );\r\n  }\r\n\r\n  const tags = tagsList.map((item) => (\r\n    <div className={article__tag}>\r\n      <input className={article__input} type=\"text\" ref={register()} name={item.id} placeholder=\"tag\" />\r\n      <button className={article__delete_tag} onClick={deleteTag} data-ind={item.id} type=\"button\">\r\n        Delete\r\n      </button>\r\n    </div>\r\n  ));\r\n\r\n  const onSubmit = (data) => {\r\n    const { title, description, body } = data;\r\n    postArticle( { ...data, ...{tagList:[\"reactjs\", \"Vital\", \"react\"]} }, token)\r\n  };\r\n\r\n  return (\r\n    <div className={article}>\r\n      <h6 className={article__title}>Create new article</h6>\r\n      <div className={article__forms}>\r\n        <label className={article__label}>\r\n          Title\r\n          <input\r\n            ref={register({ required: true })}\r\n            name=\"title\"\r\n            className={article__input}\r\n            type=\"text\"\r\n            placeholder=\"Title\"\r\n          />\r\n          {errors.title && errors.title.type === 'required' && (\r\n            <span className={classes.warning}>Title is required</span>\r\n          )}\r\n        </label>\r\n        <label className={article__label}>\r\n          Short description\r\n          <input\r\n            ref={register({ required: true })}\r\n            name=\"description\"\r\n            className={article__input}\r\n            type=\"text\"\r\n            required\r\n            placeholder=\"Short description\"\r\n          />\r\n          {errors.description && errors.description.type === 'required' && (\r\n            <span className={classes.warning}>Description is required</span>\r\n          )}\r\n        </label>\r\n        <label className={article__label}>\r\n          Text\r\n          <textarea\r\n            ref={register({ required: true, minLength: 30 })}\r\n            name=\"body\"\r\n            className={article__body}\r\n            cols={30}\r\n            required\r\n            placeholder=\"Text\"\r\n          />\r\n          {errors.body && errors.body.type === 'required' && (\r\n            <span className={classes.warning}>Body of article is required</span>\r\n          )}\r\n          {errors.body && errors.body.type === 'minLength' && (\r\n            <span className={classes.warning}>minimum characters of article is 30</span>\r\n          )}\r\n        </label>\r\n        <form className={article__tags}>\r\n          Tags\r\n          {tags}\r\n          <button\r\n            className={article__add_tag}\r\n            onClick={() => setTagsList(\r\n              (list) => [...list, { id: Math.round(Math.random() * 100) }])}\r\n            type=\"button\">\r\n            Add tag\r\n          </button>\r\n        </form>\r\n      </div>\r\n      <button className={article__button} onClick={handleSubmit(onSubmit)} type=\"submit\">\r\n        Send\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nCreateArticle.defaultProp = {};\r\nCreateArticle.propTypes = {\r\n  postArticle: PropTypes.func.isRequired,\r\n  token: PropTypes.string.isRequired,\r\n};\r\n\r\nconst mapStateToProps = ( state ) => (\r\n  {\r\n    token: state.user.token,\r\n  });\r\n\r\nexport default connect(mapStateToProps, actions)(CreateArticle);\r\n","W:\\blog\\src\\components\\SignIn\\SignIn.js",[],"W:\\blog\\src\\components\\Header\\Header.js",[],"W:\\blog\\src\\components\\Article\\Article.js",[],"W:\\blog\\src\\components\\Post\\index.js",[],"W:\\blog\\src\\api\\blog_api.js",["116","117"],"W:\\blog\\src\\api\\auth_api.js",["118"],"const base = 'https://conduit.productionready.io/api';\n\n\nclass Auth_api {\n\n  async create_user( { username, email, password }) {\n    const myHeaders = new Headers();\n    myHeaders.append( 'Content-Type', 'application/json' );\n    const raw = JSON.stringify( {\n                                  user: {\n                                    username,\n                                    email,\n                                    password,\n                                  },\n                                } );\n    const requestOptions = {\n      method: 'POST',\n      headers: myHeaders,\n      body: raw,\n      redirect: 'follow',\n    };\n    const body = await fetch(`${base}/users`, requestOptions);\n    const user = await body.json()\n    console.log(user)\n    return user;\n  }\n\n  async update_user( { username, email, password, avatar }, token) {\n    const myHeaders = new Headers();\n    myHeaders.append( 'Authorization', `Token ${token}` );\n    myHeaders.append( 'Content-Type', 'application/json' );\n    if (!password ) {\n      password = null\n    }\n    const raw = JSON.stringify( {\n                                  user: {\n                                    email,\n                                    username,\n                                    password,\n                                    image:avatar\n                                  },\n                                } );\n    const requestOptions = {\n      method: 'PUT',\n      headers: myHeaders,\n      body: raw,\n      redirect: 'follow',\n    };\n    const body = await fetch(`${base}/user`, requestOptions);\n    const user = await body.json()\n    return user;\n  }\n\n  async get_user(email, password) {\n    const myHeaders = new Headers();\n    myHeaders.append( 'Content-Type', 'application/json' );\n    const raw = JSON.stringify( {\n                                  user: {\n                                    email,\n                                    password,\n                                  },\n                                } );\n    const requestOptions = {\n      method: 'POST',\n      headers: myHeaders,\n      body: raw,\n      redirect: 'follow',\n    };\n    const body = await fetch(`${base}/users/login`, requestOptions);\n    if ( body.status === 422) {\n      return 'email ore password wrong'\n    }\n    const user = await body.json()\n    return user.user;\n  }\n\n  // async create_article() {\n  // }\n  //\n  // async edit_article() {\n  // }\n}\n\nexport default new Auth_api();","W:\\blog\\src\\components\\Post\\Post.js",[],"W:\\blog\\src\\components\\Auth_hoc\\Auth_hoc.js",[],"W:\\blog\\src\\components\\Writer\\index.js",[],"W:\\blog\\src\\components\\User\\index.js",[],"W:\\blog\\src\\components\\User\\User.js",[],"W:\\blog\\src\\components\\Writer\\Writer.js",[],{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","severity":1,"message":"130","line":33,"column":5,"nodeType":"131","messageId":"132","endLine":33,"endColumn":16},{"ruleId":"129","severity":1,"message":"130","line":23,"column":3,"nodeType":"131","messageId":"132","endLine":23,"endColumn":14},{"ruleId":"129","severity":1,"message":"130","line":28,"column":5,"nodeType":"131","messageId":"132","endLine":28,"endColumn":16},{"ruleId":"129","severity":1,"message":"130","line":49,"column":5,"nodeType":"131","messageId":"132","endLine":49,"endColumn":16},{"ruleId":"129","severity":1,"message":"130","line":24,"column":5,"nodeType":"131","messageId":"132","endLine":24,"endColumn":16},"lines-around-directive",["133"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"no-console","Unexpected console statement.","MemberExpression","unexpected","padding-line-between-statements"]